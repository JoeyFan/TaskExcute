package com.notice.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class SysParamAllExample {

	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table SYS_PARAM_ALL
	 * @abatorgenerated  Fri May 24 18:29:49 CST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table SYS_PARAM_ALL
	 * @abatorgenerated  Fri May 24 18:29:49 CST 2013
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table SYS_PARAM_ALL
	 * @abatorgenerated  Fri May 24 18:29:49 CST 2013
	 */
	public SysParamAllExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table SYS_PARAM_ALL
	 * @abatorgenerated  Fri May 24 18:29:49 CST 2013
	 */
	protected SysParamAllExample(SysParamAllExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table SYS_PARAM_ALL
	 * @abatorgenerated  Fri May 24 18:29:49 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table SYS_PARAM_ALL
	 * @abatorgenerated  Fri May 24 18:29:49 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table SYS_PARAM_ALL
	 * @abatorgenerated  Fri May 24 18:29:49 CST 2013
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table SYS_PARAM_ALL
	 * @abatorgenerated  Fri May 24 18:29:49 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table SYS_PARAM_ALL
	 * @abatorgenerated  Fri May 24 18:29:49 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table SYS_PARAM_ALL
	 * @abatorgenerated  Fri May 24 18:29:49 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table SYS_PARAM_ALL
	 * @abatorgenerated  Fri May 24 18:29:49 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Abator for iBATIS. This class corresponds to the database table SYS_PARAM_ALL
	 * @abatorgenerated  Fri May 24 18:29:49 CST 2013
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0 || criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List dateList = new ArrayList();
			Iterator iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(((Date) iter.next()).getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andPARAM_IDIsNull() {
			addCriterion("PARAM_ID is null");
			return this;
		}

		public Criteria andPARAM_IDIsNotNull() {
			addCriterion("PARAM_ID is not null");
			return this;
		}

		public Criteria andPARAM_IDEqualTo(BigDecimal value) {
			addCriterion("PARAM_ID =", value, "PARAM_ID");
			return this;
		}

		public Criteria andPARAM_IDNotEqualTo(BigDecimal value) {
			addCriterion("PARAM_ID <>", value, "PARAM_ID");
			return this;
		}

		public Criteria andPARAM_IDGreaterThan(BigDecimal value) {
			addCriterion("PARAM_ID >", value, "PARAM_ID");
			return this;
		}

		public Criteria andPARAM_IDGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("PARAM_ID >=", value, "PARAM_ID");
			return this;
		}

		public Criteria andPARAM_IDLessThan(BigDecimal value) {
			addCriterion("PARAM_ID <", value, "PARAM_ID");
			return this;
		}

		public Criteria andPARAM_IDLessThanOrEqualTo(BigDecimal value) {
			addCriterion("PARAM_ID <=", value, "PARAM_ID");
			return this;
		}

		public Criteria andPARAM_IDIn(List values) {
			addCriterion("PARAM_ID in", values, "PARAM_ID");
			return this;
		}

		public Criteria andPARAM_IDNotIn(List values) {
			addCriterion("PARAM_ID not in", values, "PARAM_ID");
			return this;
		}

		public Criteria andPARAM_IDBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("PARAM_ID between", value1, value2, "PARAM_ID");
			return this;
		}

		public Criteria andPARAM_IDNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("PARAM_ID not between", value1, value2, "PARAM_ID");
			return this;
		}

		public Criteria andTASK_IDIsNull() {
			addCriterion("TASK_ID is null");
			return this;
		}

		public Criteria andTASK_IDIsNotNull() {
			addCriterion("TASK_ID is not null");
			return this;
		}

		public Criteria andTASK_IDEqualTo(BigDecimal value) {
			addCriterion("TASK_ID =", value, "TASK_ID");
			return this;
		}

		public Criteria andTASK_IDNotEqualTo(BigDecimal value) {
			addCriterion("TASK_ID <>", value, "TASK_ID");
			return this;
		}

		public Criteria andTASK_IDGreaterThan(BigDecimal value) {
			addCriterion("TASK_ID >", value, "TASK_ID");
			return this;
		}

		public Criteria andTASK_IDGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("TASK_ID >=", value, "TASK_ID");
			return this;
		}

		public Criteria andTASK_IDLessThan(BigDecimal value) {
			addCriterion("TASK_ID <", value, "TASK_ID");
			return this;
		}

		public Criteria andTASK_IDLessThanOrEqualTo(BigDecimal value) {
			addCriterion("TASK_ID <=", value, "TASK_ID");
			return this;
		}

		public Criteria andTASK_IDIn(List values) {
			addCriterion("TASK_ID in", values, "TASK_ID");
			return this;
		}

		public Criteria andTASK_IDNotIn(List values) {
			addCriterion("TASK_ID not in", values, "TASK_ID");
			return this;
		}

		public Criteria andTASK_IDBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("TASK_ID between", value1, value2, "TASK_ID");
			return this;
		}

		public Criteria andTASK_IDNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("TASK_ID not between", value1, value2, "TASK_ID");
			return this;
		}

		public Criteria andPARAM_NAMEIsNull() {
			addCriterion("PARAM_NAME is null");
			return this;
		}

		public Criteria andPARAM_NAMEIsNotNull() {
			addCriterion("PARAM_NAME is not null");
			return this;
		}

		public Criteria andPARAM_NAMEEqualTo(String value) {
			addCriterion("PARAM_NAME =", value, "PARAM_NAME");
			return this;
		}

		public Criteria andPARAM_NAMENotEqualTo(String value) {
			addCriterion("PARAM_NAME <>", value, "PARAM_NAME");
			return this;
		}

		public Criteria andPARAM_NAMEGreaterThan(String value) {
			addCriterion("PARAM_NAME >", value, "PARAM_NAME");
			return this;
		}

		public Criteria andPARAM_NAMEGreaterThanOrEqualTo(String value) {
			addCriterion("PARAM_NAME >=", value, "PARAM_NAME");
			return this;
		}

		public Criteria andPARAM_NAMELessThan(String value) {
			addCriterion("PARAM_NAME <", value, "PARAM_NAME");
			return this;
		}

		public Criteria andPARAM_NAMELessThanOrEqualTo(String value) {
			addCriterion("PARAM_NAME <=", value, "PARAM_NAME");
			return this;
		}

		public Criteria andPARAM_NAMELike(String value) {
			addCriterion("PARAM_NAME like", value, "PARAM_NAME");
			return this;
		}

		public Criteria andPARAM_NAMENotLike(String value) {
			addCriterion("PARAM_NAME not like", value, "PARAM_NAME");
			return this;
		}

		public Criteria andPARAM_NAMEIn(List values) {
			addCriterion("PARAM_NAME in", values, "PARAM_NAME");
			return this;
		}

		public Criteria andPARAM_NAMENotIn(List values) {
			addCriterion("PARAM_NAME not in", values, "PARAM_NAME");
			return this;
		}

		public Criteria andPARAM_NAMEBetween(String value1, String value2) {
			addCriterion("PARAM_NAME between", value1, value2, "PARAM_NAME");
			return this;
		}

		public Criteria andPARAM_NAMENotBetween(String value1, String value2) {
			addCriterion("PARAM_NAME not between", value1, value2, "PARAM_NAME");
			return this;
		}

		public Criteria andPARAM_VALUEIsNull() {
			addCriterion("PARAM_VALUE is null");
			return this;
		}

		public Criteria andPARAM_VALUEIsNotNull() {
			addCriterion("PARAM_VALUE is not null");
			return this;
		}

		public Criteria andPARAM_VALUEEqualTo(String value) {
			addCriterion("PARAM_VALUE =", value, "PARAM_VALUE");
			return this;
		}

		public Criteria andPARAM_VALUENotEqualTo(String value) {
			addCriterion("PARAM_VALUE <>", value, "PARAM_VALUE");
			return this;
		}

		public Criteria andPARAM_VALUEGreaterThan(String value) {
			addCriterion("PARAM_VALUE >", value, "PARAM_VALUE");
			return this;
		}

		public Criteria andPARAM_VALUEGreaterThanOrEqualTo(String value) {
			addCriterion("PARAM_VALUE >=", value, "PARAM_VALUE");
			return this;
		}

		public Criteria andPARAM_VALUELessThan(String value) {
			addCriterion("PARAM_VALUE <", value, "PARAM_VALUE");
			return this;
		}

		public Criteria andPARAM_VALUELessThanOrEqualTo(String value) {
			addCriterion("PARAM_VALUE <=", value, "PARAM_VALUE");
			return this;
		}

		public Criteria andPARAM_VALUELike(String value) {
			addCriterion("PARAM_VALUE like", value, "PARAM_VALUE");
			return this;
		}

		public Criteria andPARAM_VALUENotLike(String value) {
			addCriterion("PARAM_VALUE not like", value, "PARAM_VALUE");
			return this;
		}

		public Criteria andPARAM_VALUEIn(List values) {
			addCriterion("PARAM_VALUE in", values, "PARAM_VALUE");
			return this;
		}

		public Criteria andPARAM_VALUENotIn(List values) {
			addCriterion("PARAM_VALUE not in", values, "PARAM_VALUE");
			return this;
		}

		public Criteria andPARAM_VALUEBetween(String value1, String value2) {
			addCriterion("PARAM_VALUE between", value1, value2, "PARAM_VALUE");
			return this;
		}

		public Criteria andPARAM_VALUENotBetween(String value1, String value2) {
			addCriterion("PARAM_VALUE not between", value1, value2, "PARAM_VALUE");
			return this;
		}

		public Criteria andENABLE_DATEIsNull() {
			addCriterion("ENABLE_DATE is null");
			return this;
		}

		public Criteria andENABLE_DATEIsNotNull() {
			addCriterion("ENABLE_DATE is not null");
			return this;
		}

		public Criteria andENABLE_DATEEqualTo(Date value) {
			addCriterionForJDBCDate("ENABLE_DATE =", value, "ENABLE_DATE");
			return this;
		}

		public Criteria andENABLE_DATENotEqualTo(Date value) {
			addCriterionForJDBCDate("ENABLE_DATE <>", value, "ENABLE_DATE");
			return this;
		}

		public Criteria andENABLE_DATEGreaterThan(Date value) {
			addCriterionForJDBCDate("ENABLE_DATE >", value, "ENABLE_DATE");
			return this;
		}

		public Criteria andENABLE_DATEGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("ENABLE_DATE >=", value, "ENABLE_DATE");
			return this;
		}

		public Criteria andENABLE_DATELessThan(Date value) {
			addCriterionForJDBCDate("ENABLE_DATE <", value, "ENABLE_DATE");
			return this;
		}

		public Criteria andENABLE_DATELessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("ENABLE_DATE <=", value, "ENABLE_DATE");
			return this;
		}

		public Criteria andENABLE_DATEIn(List values) {
			addCriterionForJDBCDate("ENABLE_DATE in", values, "ENABLE_DATE");
			return this;
		}

		public Criteria andENABLE_DATENotIn(List values) {
			addCriterionForJDBCDate("ENABLE_DATE not in", values, "ENABLE_DATE");
			return this;
		}

		public Criteria andENABLE_DATEBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("ENABLE_DATE between", value1, value2, "ENABLE_DATE");
			return this;
		}

		public Criteria andENABLE_DATENotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("ENABLE_DATE not between", value1, value2, "ENABLE_DATE");
			return this;
		}

		public Criteria andDISABLE_DATEIsNull() {
			addCriterion("DISABLE_DATE is null");
			return this;
		}

		public Criteria andDISABLE_DATEIsNotNull() {
			addCriterion("DISABLE_DATE is not null");
			return this;
		}

		public Criteria andDISABLE_DATEEqualTo(Date value) {
			addCriterionForJDBCDate("DISABLE_DATE =", value, "DISABLE_DATE");
			return this;
		}

		public Criteria andDISABLE_DATENotEqualTo(Date value) {
			addCriterionForJDBCDate("DISABLE_DATE <>", value, "DISABLE_DATE");
			return this;
		}

		public Criteria andDISABLE_DATEGreaterThan(Date value) {
			addCriterionForJDBCDate("DISABLE_DATE >", value, "DISABLE_DATE");
			return this;
		}

		public Criteria andDISABLE_DATEGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("DISABLE_DATE >=", value, "DISABLE_DATE");
			return this;
		}

		public Criteria andDISABLE_DATELessThan(Date value) {
			addCriterionForJDBCDate("DISABLE_DATE <", value, "DISABLE_DATE");
			return this;
		}

		public Criteria andDISABLE_DATELessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("DISABLE_DATE <=", value, "DISABLE_DATE");
			return this;
		}

		public Criteria andDISABLE_DATEIn(List values) {
			addCriterionForJDBCDate("DISABLE_DATE in", values, "DISABLE_DATE");
			return this;
		}

		public Criteria andDISABLE_DATENotIn(List values) {
			addCriterionForJDBCDate("DISABLE_DATE not in", values, "DISABLE_DATE");
			return this;
		}

		public Criteria andDISABLE_DATEBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("DISABLE_DATE between", value1, value2, "DISABLE_DATE");
			return this;
		}

		public Criteria andDISABLE_DATENotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("DISABLE_DATE not between", value1, value2, "DISABLE_DATE");
			return this;
		}

		public Criteria andCREATED_DATEIsNull() {
			addCriterion("CREATED_DATE is null");
			return this;
		}

		public Criteria andCREATED_DATEIsNotNull() {
			addCriterion("CREATED_DATE is not null");
			return this;
		}

		public Criteria andCREATED_DATEEqualTo(Date value) {
			addCriterionForJDBCDate("CREATED_DATE =", value, "CREATED_DATE");
			return this;
		}

		public Criteria andCREATED_DATENotEqualTo(Date value) {
			addCriterionForJDBCDate("CREATED_DATE <>", value, "CREATED_DATE");
			return this;
		}

		public Criteria andCREATED_DATEGreaterThan(Date value) {
			addCriterionForJDBCDate("CREATED_DATE >", value, "CREATED_DATE");
			return this;
		}

		public Criteria andCREATED_DATEGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("CREATED_DATE >=", value, "CREATED_DATE");
			return this;
		}

		public Criteria andCREATED_DATELessThan(Date value) {
			addCriterionForJDBCDate("CREATED_DATE <", value, "CREATED_DATE");
			return this;
		}

		public Criteria andCREATED_DATELessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("CREATED_DATE <=", value, "CREATED_DATE");
			return this;
		}

		public Criteria andCREATED_DATEIn(List values) {
			addCriterionForJDBCDate("CREATED_DATE in", values, "CREATED_DATE");
			return this;
		}

		public Criteria andCREATED_DATENotIn(List values) {
			addCriterionForJDBCDate("CREATED_DATE not in", values, "CREATED_DATE");
			return this;
		}

		public Criteria andCREATED_DATEBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("CREATED_DATE between", value1, value2, "CREATED_DATE");
			return this;
		}

		public Criteria andCREATED_DATENotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("CREATED_DATE not between", value1, value2, "CREATED_DATE");
			return this;
		}

		public Criteria andCREATED_BYIsNull() {
			addCriterion("CREATED_BY is null");
			return this;
		}

		public Criteria andCREATED_BYIsNotNull() {
			addCriterion("CREATED_BY is not null");
			return this;
		}

		public Criteria andCREATED_BYEqualTo(BigDecimal value) {
			addCriterion("CREATED_BY =", value, "CREATED_BY");
			return this;
		}

		public Criteria andCREATED_BYNotEqualTo(BigDecimal value) {
			addCriterion("CREATED_BY <>", value, "CREATED_BY");
			return this;
		}

		public Criteria andCREATED_BYGreaterThan(BigDecimal value) {
			addCriterion("CREATED_BY >", value, "CREATED_BY");
			return this;
		}

		public Criteria andCREATED_BYGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("CREATED_BY >=", value, "CREATED_BY");
			return this;
		}

		public Criteria andCREATED_BYLessThan(BigDecimal value) {
			addCriterion("CREATED_BY <", value, "CREATED_BY");
			return this;
		}

		public Criteria andCREATED_BYLessThanOrEqualTo(BigDecimal value) {
			addCriterion("CREATED_BY <=", value, "CREATED_BY");
			return this;
		}

		public Criteria andCREATED_BYIn(List values) {
			addCriterion("CREATED_BY in", values, "CREATED_BY");
			return this;
		}

		public Criteria andCREATED_BYNotIn(List values) {
			addCriterion("CREATED_BY not in", values, "CREATED_BY");
			return this;
		}

		public Criteria andCREATED_BYBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("CREATED_BY between", value1, value2, "CREATED_BY");
			return this;
		}

		public Criteria andCREATED_BYNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("CREATED_BY not between", value1, value2, "CREATED_BY");
			return this;
		}

		public Criteria andLAST_UPDATED_DATEIsNull() {
			addCriterion("LAST_UPDATED_DATE is null");
			return this;
		}

		public Criteria andLAST_UPDATED_DATEIsNotNull() {
			addCriterion("LAST_UPDATED_DATE is not null");
			return this;
		}

		public Criteria andLAST_UPDATED_DATEEqualTo(Date value) {
			addCriterionForJDBCDate("LAST_UPDATED_DATE =", value, "LAST_UPDATED_DATE");
			return this;
		}

		public Criteria andLAST_UPDATED_DATENotEqualTo(Date value) {
			addCriterionForJDBCDate("LAST_UPDATED_DATE <>", value, "LAST_UPDATED_DATE");
			return this;
		}

		public Criteria andLAST_UPDATED_DATEGreaterThan(Date value) {
			addCriterionForJDBCDate("LAST_UPDATED_DATE >", value, "LAST_UPDATED_DATE");
			return this;
		}

		public Criteria andLAST_UPDATED_DATEGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("LAST_UPDATED_DATE >=", value, "LAST_UPDATED_DATE");
			return this;
		}

		public Criteria andLAST_UPDATED_DATELessThan(Date value) {
			addCriterionForJDBCDate("LAST_UPDATED_DATE <", value, "LAST_UPDATED_DATE");
			return this;
		}

		public Criteria andLAST_UPDATED_DATELessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("LAST_UPDATED_DATE <=", value, "LAST_UPDATED_DATE");
			return this;
		}

		public Criteria andLAST_UPDATED_DATEIn(List values) {
			addCriterionForJDBCDate("LAST_UPDATED_DATE in", values, "LAST_UPDATED_DATE");
			return this;
		}

		public Criteria andLAST_UPDATED_DATENotIn(List values) {
			addCriterionForJDBCDate("LAST_UPDATED_DATE not in", values, "LAST_UPDATED_DATE");
			return this;
		}

		public Criteria andLAST_UPDATED_DATEBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("LAST_UPDATED_DATE between", value1, value2, "LAST_UPDATED_DATE");
			return this;
		}

		public Criteria andLAST_UPDATED_DATENotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("LAST_UPDATED_DATE not between", value1, value2, "LAST_UPDATED_DATE");
			return this;
		}

		public Criteria andLAST_UPDATED_BYIsNull() {
			addCriterion("LAST_UPDATED_BY is null");
			return this;
		}

		public Criteria andLAST_UPDATED_BYIsNotNull() {
			addCriterion("LAST_UPDATED_BY is not null");
			return this;
		}

		public Criteria andLAST_UPDATED_BYEqualTo(BigDecimal value) {
			addCriterion("LAST_UPDATED_BY =", value, "LAST_UPDATED_BY");
			return this;
		}

		public Criteria andLAST_UPDATED_BYNotEqualTo(BigDecimal value) {
			addCriterion("LAST_UPDATED_BY <>", value, "LAST_UPDATED_BY");
			return this;
		}

		public Criteria andLAST_UPDATED_BYGreaterThan(BigDecimal value) {
			addCriterion("LAST_UPDATED_BY >", value, "LAST_UPDATED_BY");
			return this;
		}

		public Criteria andLAST_UPDATED_BYGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("LAST_UPDATED_BY >=", value, "LAST_UPDATED_BY");
			return this;
		}

		public Criteria andLAST_UPDATED_BYLessThan(BigDecimal value) {
			addCriterion("LAST_UPDATED_BY <", value, "LAST_UPDATED_BY");
			return this;
		}

		public Criteria andLAST_UPDATED_BYLessThanOrEqualTo(BigDecimal value) {
			addCriterion("LAST_UPDATED_BY <=", value, "LAST_UPDATED_BY");
			return this;
		}

		public Criteria andLAST_UPDATED_BYIn(List values) {
			addCriterion("LAST_UPDATED_BY in", values, "LAST_UPDATED_BY");
			return this;
		}

		public Criteria andLAST_UPDATED_BYNotIn(List values) {
			addCriterion("LAST_UPDATED_BY not in", values, "LAST_UPDATED_BY");
			return this;
		}

		public Criteria andLAST_UPDATED_BYBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("LAST_UPDATED_BY between", value1, value2, "LAST_UPDATED_BY");
			return this;
		}

		public Criteria andLAST_UPDATED_BYNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("LAST_UPDATED_BY not between", value1, value2, "LAST_UPDATED_BY");
			return this;
		}

		public Criteria andDESCRIPTIONIsNull() {
			addCriterion("DESCRIPTION is null");
			return this;
		}

		public Criteria andDESCRIPTIONIsNotNull() {
			addCriterion("DESCRIPTION is not null");
			return this;
		}

		public Criteria andDESCRIPTIONEqualTo(String value) {
			addCriterion("DESCRIPTION =", value, "DESCRIPTION");
			return this;
		}

		public Criteria andDESCRIPTIONNotEqualTo(String value) {
			addCriterion("DESCRIPTION <>", value, "DESCRIPTION");
			return this;
		}

		public Criteria andDESCRIPTIONGreaterThan(String value) {
			addCriterion("DESCRIPTION >", value, "DESCRIPTION");
			return this;
		}

		public Criteria andDESCRIPTIONGreaterThanOrEqualTo(String value) {
			addCriterion("DESCRIPTION >=", value, "DESCRIPTION");
			return this;
		}

		public Criteria andDESCRIPTIONLessThan(String value) {
			addCriterion("DESCRIPTION <", value, "DESCRIPTION");
			return this;
		}

		public Criteria andDESCRIPTIONLessThanOrEqualTo(String value) {
			addCriterion("DESCRIPTION <=", value, "DESCRIPTION");
			return this;
		}

		public Criteria andDESCRIPTIONLike(String value) {
			addCriterion("DESCRIPTION like", value, "DESCRIPTION");
			return this;
		}

		public Criteria andDESCRIPTIONNotLike(String value) {
			addCriterion("DESCRIPTION not like", value, "DESCRIPTION");
			return this;
		}

		public Criteria andDESCRIPTIONIn(List values) {
			addCriterion("DESCRIPTION in", values, "DESCRIPTION");
			return this;
		}

		public Criteria andDESCRIPTIONNotIn(List values) {
			addCriterion("DESCRIPTION not in", values, "DESCRIPTION");
			return this;
		}

		public Criteria andDESCRIPTIONBetween(String value1, String value2) {
			addCriterion("DESCRIPTION between", value1, value2, "DESCRIPTION");
			return this;
		}

		public Criteria andDESCRIPTIONNotBetween(String value1, String value2) {
			addCriterion("DESCRIPTION not between", value1, value2, "DESCRIPTION");
			return this;
		}
	}
}