package com.notice.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class SysTaskPageAllExample {
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table SYS_TASK_PAGE_ALL
     *
     * @abatorgenerated Fri May 24 18:30:16 CST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table SYS_TASK_PAGE_ALL
     *
     * @abatorgenerated Fri May 24 18:30:16 CST 2013
     */
    protected List oredCriteria;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table SYS_TASK_PAGE_ALL
     *
     * @abatorgenerated Fri May 24 18:30:16 CST 2013
     */
    public SysTaskPageAllExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table SYS_TASK_PAGE_ALL
     *
     * @abatorgenerated Fri May 24 18:30:16 CST 2013
     */
    protected SysTaskPageAllExample(SysTaskPageAllExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table SYS_TASK_PAGE_ALL
     *
     * @abatorgenerated Fri May 24 18:30:16 CST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table SYS_TASK_PAGE_ALL
     *
     * @abatorgenerated Fri May 24 18:30:16 CST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table SYS_TASK_PAGE_ALL
     *
     * @abatorgenerated Fri May 24 18:30:16 CST 2013
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table SYS_TASK_PAGE_ALL
     *
     * @abatorgenerated Fri May 24 18:30:16 CST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table SYS_TASK_PAGE_ALL
     *
     * @abatorgenerated Fri May 24 18:30:16 CST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table SYS_TASK_PAGE_ALL
     *
     * @abatorgenerated Fri May 24 18:30:16 CST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table SYS_TASK_PAGE_ALL
     *
     * @abatorgenerated Fri May 24 18:30:16 CST 2013
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table SYS_TASK_PAGE_ALL
     *
     * @abatorgenerated Fri May 24 18:30:16 CST 2013
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List dateList = new ArrayList();
            Iterator iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(((Date)iter.next()).getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andPAGE_IDIsNull() {
            addCriterion("PAGE_ID is null");
            return this;
        }

        public Criteria andPAGE_IDIsNotNull() {
            addCriterion("PAGE_ID is not null");
            return this;
        }

        public Criteria andPAGE_IDEqualTo(BigDecimal value) {
            addCriterion("PAGE_ID =", value, "PAGE_ID");
            return this;
        }

        public Criteria andPAGE_IDNotEqualTo(BigDecimal value) {
            addCriterion("PAGE_ID <>", value, "PAGE_ID");
            return this;
        }

        public Criteria andPAGE_IDGreaterThan(BigDecimal value) {
            addCriterion("PAGE_ID >", value, "PAGE_ID");
            return this;
        }

        public Criteria andPAGE_IDGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("PAGE_ID >=", value, "PAGE_ID");
            return this;
        }

        public Criteria andPAGE_IDLessThan(BigDecimal value) {
            addCriterion("PAGE_ID <", value, "PAGE_ID");
            return this;
        }

        public Criteria andPAGE_IDLessThanOrEqualTo(BigDecimal value) {
            addCriterion("PAGE_ID <=", value, "PAGE_ID");
            return this;
        }

        public Criteria andPAGE_IDIn(List values) {
            addCriterion("PAGE_ID in", values, "PAGE_ID");
            return this;
        }

        public Criteria andPAGE_IDNotIn(List values) {
            addCriterion("PAGE_ID not in", values, "PAGE_ID");
            return this;
        }

        public Criteria andPAGE_IDBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PAGE_ID between", value1, value2, "PAGE_ID");
            return this;
        }

        public Criteria andPAGE_IDNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PAGE_ID not between", value1, value2, "PAGE_ID");
            return this;
        }

        public Criteria andTASK_IDIsNull() {
            addCriterion("TASK_ID is null");
            return this;
        }

        public Criteria andTASK_IDIsNotNull() {
            addCriterion("TASK_ID is not null");
            return this;
        }

        public Criteria andTASK_IDEqualTo(BigDecimal value) {
            addCriterion("TASK_ID =", value, "TASK_ID");
            return this;
        }

        public Criteria andTASK_IDNotEqualTo(BigDecimal value) {
            addCriterion("TASK_ID <>", value, "TASK_ID");
            return this;
        }

        public Criteria andTASK_IDGreaterThan(BigDecimal value) {
            addCriterion("TASK_ID >", value, "TASK_ID");
            return this;
        }

        public Criteria andTASK_IDGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("TASK_ID >=", value, "TASK_ID");
            return this;
        }

        public Criteria andTASK_IDLessThan(BigDecimal value) {
            addCriterion("TASK_ID <", value, "TASK_ID");
            return this;
        }

        public Criteria andTASK_IDLessThanOrEqualTo(BigDecimal value) {
            addCriterion("TASK_ID <=", value, "TASK_ID");
            return this;
        }

        public Criteria andTASK_IDIn(List values) {
            addCriterion("TASK_ID in", values, "TASK_ID");
            return this;
        }

        public Criteria andTASK_IDNotIn(List values) {
            addCriterion("TASK_ID not in", values, "TASK_ID");
            return this;
        }

        public Criteria andTASK_IDBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("TASK_ID between", value1, value2, "TASK_ID");
            return this;
        }

        public Criteria andTASK_IDNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("TASK_ID not between", value1, value2, "TASK_ID");
            return this;
        }

        public Criteria andPAGE_NAMEIsNull() {
            addCriterion("PAGE_NAME is null");
            return this;
        }

        public Criteria andPAGE_NAMEIsNotNull() {
            addCriterion("PAGE_NAME is not null");
            return this;
        }

        public Criteria andPAGE_NAMEEqualTo(String value) {
            addCriterion("PAGE_NAME =", value, "PAGE_NAME");
            return this;
        }

        public Criteria andPAGE_NAMENotEqualTo(String value) {
            addCriterion("PAGE_NAME <>", value, "PAGE_NAME");
            return this;
        }

        public Criteria andPAGE_NAMEGreaterThan(String value) {
            addCriterion("PAGE_NAME >", value, "PAGE_NAME");
            return this;
        }

        public Criteria andPAGE_NAMEGreaterThanOrEqualTo(String value) {
            addCriterion("PAGE_NAME >=", value, "PAGE_NAME");
            return this;
        }

        public Criteria andPAGE_NAMELessThan(String value) {
            addCriterion("PAGE_NAME <", value, "PAGE_NAME");
            return this;
        }

        public Criteria andPAGE_NAMELessThanOrEqualTo(String value) {
            addCriterion("PAGE_NAME <=", value, "PAGE_NAME");
            return this;
        }

        public Criteria andPAGE_NAMELike(String value) {
            addCriterion("PAGE_NAME like", value, "PAGE_NAME");
            return this;
        }

        public Criteria andPAGE_NAMENotLike(String value) {
            addCriterion("PAGE_NAME not like", value, "PAGE_NAME");
            return this;
        }

        public Criteria andPAGE_NAMEIn(List values) {
            addCriterion("PAGE_NAME in", values, "PAGE_NAME");
            return this;
        }

        public Criteria andPAGE_NAMENotIn(List values) {
            addCriterion("PAGE_NAME not in", values, "PAGE_NAME");
            return this;
        }

        public Criteria andPAGE_NAMEBetween(String value1, String value2) {
            addCriterion("PAGE_NAME between", value1, value2, "PAGE_NAME");
            return this;
        }

        public Criteria andPAGE_NAMENotBetween(String value1, String value2) {
            addCriterion("PAGE_NAME not between", value1, value2, "PAGE_NAME");
            return this;
        }

        public Criteria andDISABLEDIsNull() {
            addCriterion("DISABLED is null");
            return this;
        }

        public Criteria andDISABLEDIsNotNull() {
            addCriterion("DISABLED is not null");
            return this;
        }

        public Criteria andDISABLEDEqualTo(String value) {
            addCriterion("DISABLED =", value, "DISABLED");
            return this;
        }

        public Criteria andDISABLEDNotEqualTo(String value) {
            addCriterion("DISABLED <>", value, "DISABLED");
            return this;
        }

        public Criteria andDISABLEDGreaterThan(String value) {
            addCriterion("DISABLED >", value, "DISABLED");
            return this;
        }

        public Criteria andDISABLEDGreaterThanOrEqualTo(String value) {
            addCriterion("DISABLED >=", value, "DISABLED");
            return this;
        }

        public Criteria andDISABLEDLessThan(String value) {
            addCriterion("DISABLED <", value, "DISABLED");
            return this;
        }

        public Criteria andDISABLEDLessThanOrEqualTo(String value) {
            addCriterion("DISABLED <=", value, "DISABLED");
            return this;
        }

        public Criteria andDISABLEDLike(String value) {
            addCriterion("DISABLED like", value, "DISABLED");
            return this;
        }

        public Criteria andDISABLEDNotLike(String value) {
            addCriterion("DISABLED not like", value, "DISABLED");
            return this;
        }

        public Criteria andDISABLEDIn(List values) {
            addCriterion("DISABLED in", values, "DISABLED");
            return this;
        }

        public Criteria andDISABLEDNotIn(List values) {
            addCriterion("DISABLED not in", values, "DISABLED");
            return this;
        }

        public Criteria andDISABLEDBetween(String value1, String value2) {
            addCriterion("DISABLED between", value1, value2, "DISABLED");
            return this;
        }

        public Criteria andDISABLEDNotBetween(String value1, String value2) {
            addCriterion("DISABLED not between", value1, value2, "DISABLED");
            return this;
        }

        public Criteria andDESCRIPTIONIsNull() {
            addCriterion("DESCRIPTION is null");
            return this;
        }

        public Criteria andDESCRIPTIONIsNotNull() {
            addCriterion("DESCRIPTION is not null");
            return this;
        }

        public Criteria andDESCRIPTIONEqualTo(String value) {
            addCriterion("DESCRIPTION =", value, "DESCRIPTION");
            return this;
        }

        public Criteria andDESCRIPTIONNotEqualTo(String value) {
            addCriterion("DESCRIPTION <>", value, "DESCRIPTION");
            return this;
        }

        public Criteria andDESCRIPTIONGreaterThan(String value) {
            addCriterion("DESCRIPTION >", value, "DESCRIPTION");
            return this;
        }

        public Criteria andDESCRIPTIONGreaterThanOrEqualTo(String value) {
            addCriterion("DESCRIPTION >=", value, "DESCRIPTION");
            return this;
        }

        public Criteria andDESCRIPTIONLessThan(String value) {
            addCriterion("DESCRIPTION <", value, "DESCRIPTION");
            return this;
        }

        public Criteria andDESCRIPTIONLessThanOrEqualTo(String value) {
            addCriterion("DESCRIPTION <=", value, "DESCRIPTION");
            return this;
        }

        public Criteria andDESCRIPTIONLike(String value) {
            addCriterion("DESCRIPTION like", value, "DESCRIPTION");
            return this;
        }

        public Criteria andDESCRIPTIONNotLike(String value) {
            addCriterion("DESCRIPTION not like", value, "DESCRIPTION");
            return this;
        }

        public Criteria andDESCRIPTIONIn(List values) {
            addCriterion("DESCRIPTION in", values, "DESCRIPTION");
            return this;
        }

        public Criteria andDESCRIPTIONNotIn(List values) {
            addCriterion("DESCRIPTION not in", values, "DESCRIPTION");
            return this;
        }

        public Criteria andDESCRIPTIONBetween(String value1, String value2) {
            addCriterion("DESCRIPTION between", value1, value2, "DESCRIPTION");
            return this;
        }

        public Criteria andDESCRIPTIONNotBetween(String value1, String value2) {
            addCriterion("DESCRIPTION not between", value1, value2, "DESCRIPTION");
            return this;
        }

        public Criteria andCREATED_BYIsNull() {
            addCriterion("CREATED_BY is null");
            return this;
        }

        public Criteria andCREATED_BYIsNotNull() {
            addCriterion("CREATED_BY is not null");
            return this;
        }

        public Criteria andCREATED_BYEqualTo(BigDecimal value) {
            addCriterion("CREATED_BY =", value, "CREATED_BY");
            return this;
        }

        public Criteria andCREATED_BYNotEqualTo(BigDecimal value) {
            addCriterion("CREATED_BY <>", value, "CREATED_BY");
            return this;
        }

        public Criteria andCREATED_BYGreaterThan(BigDecimal value) {
            addCriterion("CREATED_BY >", value, "CREATED_BY");
            return this;
        }

        public Criteria andCREATED_BYGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("CREATED_BY >=", value, "CREATED_BY");
            return this;
        }

        public Criteria andCREATED_BYLessThan(BigDecimal value) {
            addCriterion("CREATED_BY <", value, "CREATED_BY");
            return this;
        }

        public Criteria andCREATED_BYLessThanOrEqualTo(BigDecimal value) {
            addCriterion("CREATED_BY <=", value, "CREATED_BY");
            return this;
        }

        public Criteria andCREATED_BYIn(List values) {
            addCriterion("CREATED_BY in", values, "CREATED_BY");
            return this;
        }

        public Criteria andCREATED_BYNotIn(List values) {
            addCriterion("CREATED_BY not in", values, "CREATED_BY");
            return this;
        }

        public Criteria andCREATED_BYBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("CREATED_BY between", value1, value2, "CREATED_BY");
            return this;
        }

        public Criteria andCREATED_BYNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("CREATED_BY not between", value1, value2, "CREATED_BY");
            return this;
        }

        public Criteria andCREATION_DATEIsNull() {
            addCriterion("CREATION_DATE is null");
            return this;
        }

        public Criteria andCREATION_DATEIsNotNull() {
            addCriterion("CREATION_DATE is not null");
            return this;
        }

        public Criteria andCREATION_DATEEqualTo(Date value) {
            addCriterionForJDBCDate("CREATION_DATE =", value, "CREATION_DATE");
            return this;
        }

        public Criteria andCREATION_DATENotEqualTo(Date value) {
            addCriterionForJDBCDate("CREATION_DATE <>", value, "CREATION_DATE");
            return this;
        }

        public Criteria andCREATION_DATEGreaterThan(Date value) {
            addCriterionForJDBCDate("CREATION_DATE >", value, "CREATION_DATE");
            return this;
        }

        public Criteria andCREATION_DATEGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CREATION_DATE >=", value, "CREATION_DATE");
            return this;
        }

        public Criteria andCREATION_DATELessThan(Date value) {
            addCriterionForJDBCDate("CREATION_DATE <", value, "CREATION_DATE");
            return this;
        }

        public Criteria andCREATION_DATELessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CREATION_DATE <=", value, "CREATION_DATE");
            return this;
        }

        public Criteria andCREATION_DATEIn(List values) {
            addCriterionForJDBCDate("CREATION_DATE in", values, "CREATION_DATE");
            return this;
        }

        public Criteria andCREATION_DATENotIn(List values) {
            addCriterionForJDBCDate("CREATION_DATE not in", values, "CREATION_DATE");
            return this;
        }

        public Criteria andCREATION_DATEBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CREATION_DATE between", value1, value2, "CREATION_DATE");
            return this;
        }

        public Criteria andCREATION_DATENotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CREATION_DATE not between", value1, value2, "CREATION_DATE");
            return this;
        }

        public Criteria andLAST_UPDATED_BYIsNull() {
            addCriterion("LAST_UPDATED_BY is null");
            return this;
        }

        public Criteria andLAST_UPDATED_BYIsNotNull() {
            addCriterion("LAST_UPDATED_BY is not null");
            return this;
        }

        public Criteria andLAST_UPDATED_BYEqualTo(BigDecimal value) {
            addCriterion("LAST_UPDATED_BY =", value, "LAST_UPDATED_BY");
            return this;
        }

        public Criteria andLAST_UPDATED_BYNotEqualTo(BigDecimal value) {
            addCriterion("LAST_UPDATED_BY <>", value, "LAST_UPDATED_BY");
            return this;
        }

        public Criteria andLAST_UPDATED_BYGreaterThan(BigDecimal value) {
            addCriterion("LAST_UPDATED_BY >", value, "LAST_UPDATED_BY");
            return this;
        }

        public Criteria andLAST_UPDATED_BYGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("LAST_UPDATED_BY >=", value, "LAST_UPDATED_BY");
            return this;
        }

        public Criteria andLAST_UPDATED_BYLessThan(BigDecimal value) {
            addCriterion("LAST_UPDATED_BY <", value, "LAST_UPDATED_BY");
            return this;
        }

        public Criteria andLAST_UPDATED_BYLessThanOrEqualTo(BigDecimal value) {
            addCriterion("LAST_UPDATED_BY <=", value, "LAST_UPDATED_BY");
            return this;
        }

        public Criteria andLAST_UPDATED_BYIn(List values) {
            addCriterion("LAST_UPDATED_BY in", values, "LAST_UPDATED_BY");
            return this;
        }

        public Criteria andLAST_UPDATED_BYNotIn(List values) {
            addCriterion("LAST_UPDATED_BY not in", values, "LAST_UPDATED_BY");
            return this;
        }

        public Criteria andLAST_UPDATED_BYBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("LAST_UPDATED_BY between", value1, value2, "LAST_UPDATED_BY");
            return this;
        }

        public Criteria andLAST_UPDATED_BYNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("LAST_UPDATED_BY not between", value1, value2, "LAST_UPDATED_BY");
            return this;
        }

        public Criteria andLAST_UPDATE_DATEIsNull() {
            addCriterion("LAST_UPDATE_DATE is null");
            return this;
        }

        public Criteria andLAST_UPDATE_DATEIsNotNull() {
            addCriterion("LAST_UPDATE_DATE is not null");
            return this;
        }

        public Criteria andLAST_UPDATE_DATEEqualTo(Date value) {
            addCriterionForJDBCDate("LAST_UPDATE_DATE =", value, "LAST_UPDATE_DATE");
            return this;
        }

        public Criteria andLAST_UPDATE_DATENotEqualTo(Date value) {
            addCriterionForJDBCDate("LAST_UPDATE_DATE <>", value, "LAST_UPDATE_DATE");
            return this;
        }

        public Criteria andLAST_UPDATE_DATEGreaterThan(Date value) {
            addCriterionForJDBCDate("LAST_UPDATE_DATE >", value, "LAST_UPDATE_DATE");
            return this;
        }

        public Criteria andLAST_UPDATE_DATEGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("LAST_UPDATE_DATE >=", value, "LAST_UPDATE_DATE");
            return this;
        }

        public Criteria andLAST_UPDATE_DATELessThan(Date value) {
            addCriterionForJDBCDate("LAST_UPDATE_DATE <", value, "LAST_UPDATE_DATE");
            return this;
        }

        public Criteria andLAST_UPDATE_DATELessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("LAST_UPDATE_DATE <=", value, "LAST_UPDATE_DATE");
            return this;
        }

        public Criteria andLAST_UPDATE_DATEIn(List values) {
            addCriterionForJDBCDate("LAST_UPDATE_DATE in", values, "LAST_UPDATE_DATE");
            return this;
        }

        public Criteria andLAST_UPDATE_DATENotIn(List values) {
            addCriterionForJDBCDate("LAST_UPDATE_DATE not in", values, "LAST_UPDATE_DATE");
            return this;
        }

        public Criteria andLAST_UPDATE_DATEBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("LAST_UPDATE_DATE between", value1, value2, "LAST_UPDATE_DATE");
            return this;
        }

        public Criteria andLAST_UPDATE_DATENotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("LAST_UPDATE_DATE not between", value1, value2, "LAST_UPDATE_DATE");
            return this;
        }
    }
}